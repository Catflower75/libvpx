name: Prebuild libvpx (VS2019 v142, static /MT) via vcpkg

on:
  workflow_dispatch:

jobs:
  libvpx:
    name: libvpx (${{ matrix.triplet }})
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        triplet: [x86-windows-static, x64-windows-static]

    env:
      VCPKG_PLATFORM_TOOLSET: v142   # force VS2019 toolset

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure v142 toolset (install if missing)
        shell: pwsh
        run: |
          $vsInstaller = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vs_installer.exe"
          $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $hasV142 = & $vswhere -products * -requires Microsoft.VisualStudio.Component.VC.v142.x86.x64 -property installationPath
          if (-not $hasV142) {
            Write-Host "Installing VS2019 v142 toolset..."
            & $vsInstaller modify --installPath "$(& $vswhere -products * -latest -property installationPath)" `
              --add Microsoft.VisualStudio.Component.VC.v142.x86.x64 --quiet --norestart --nocache
            if ($LASTEXITCODE -ne 0) { throw "Failed to install v142 toolset." }
          }

      - name: Setup vcpkg
        uses: microsoft/setup-vcpkg@v1
        with:
          # Pin to a stable commit if you want reproducibility; leaving default is fine too
          vcpkgGitCommitId: c9b0e18a4ee8f3a18f23a6e2d1f6a0e0e0cf0e67

      - name: Install libvpx (static /MT)
        run: vcpkg install libvpx:${{ matrix.triplet }}

      - name: Collect library
        shell: pwsh
        run: |
          $root = "${env:VCPKG_INSTALLATION_ROOT}\installed\${{ matrix.triplet }}\lib"
          if (!(Test-Path $root)) { throw "vcpkg lib folder not found: $root" }
          New-Item -ItemType Directory -Force -Path "artifacts\${{ matrix.triplet }}" | Out-Null
          Copy-Item "$root\vpx.lib" "artifacts\${{ matrix.triplet }}\vpx.lib"
          # Optional legacy filename some projects expect
          Copy-Item "$root\vpx.lib" "artifacts\${{ matrix.triplet }}\vpxmt.lib"

      - name: Verify static CRT (/MT)
        shell: pwsh
        run: |
          $out = & dumpbin /directives "artifacts\${{ matrix.triplet }}\vpx.lib"
          if ($out -notmatch "LIBCMT") { Write-Host $out; throw "Library is not linked with static CRT (LIBCMT)." }
          "Verified: static CRT (LIBCMT) detected."

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libvpx-v142-${{ matrix.triplet }}
          path: artifacts/${{ matrix.triplet }}/*
