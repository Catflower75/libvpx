name: Prebuild libvpx (VS2019 v142, x86-windows-static, /MT)

on:
  workflow_dispatch:

jobs:
  libvpx-x86:
    runs-on: windows-2022
    env:
      VCPKG_PLATFORM_TOOLSET: v142   # force VS2019 toolset
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure v142 toolset (install if missing)
        shell: pwsh
        run: |
          $vsInstaller = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vs_installer.exe"
          $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $hasV142 = & $vswhere -products * -requires Microsoft.VisualStudio.Component.VC.v142.x86.x64 -property installationPath
          if (-not $hasV142) {
            Write-Host "Installing VS2019 v142 toolset..."
            $vsPath = & $vswhere -products * -latest -property installationPath
            & $vsInstaller modify --installPath "$vsPath" --add Microsoft.VisualStudio.Component.VC.v142.x86.x64 --quiet --norestart --nocache
            if ($LASTEXITCODE -ne 0) { throw "Failed to install v142 toolset." }
          }
          "v142 is available."

      - name: Clone vcpkg
        run: git clone --depth 1 https://github.com/microsoft/vcpkg.git

      - name: Bootstrap vcpkg
        run: .\vcpkg\bootstrap-vcpkg.bat -disableMetrics

      - name: Install libvpx (x86-windows-static, /MT)
        run: .\vcpkg\vcpkg.exe install libvpx:x86-windows-static --clean-after-build

      - name: Show vcpkg state
        shell: pwsh
        run: |
          .\vcpkg\vcpkg.exe list
          Write-Host "Listing installed directories:"
          Get-ChildItem -Recurse -Directory .\vcpkg\installed | Select-Object FullName
          Write-Host "Listing lib directories:"
          Get-ChildItem -Recurse -Directory .\vcpkg\installed\x86-windows-static\lib -ErrorAction SilentlyContinue | Select-Object FullName

      - name: Collect library
        shell: pwsh
        run: |
          $vcpkgRoot = Resolve-Path ".\vcpkg"
          $libDir = Join-Path $vcpkgRoot "installed\x86-windows-static\lib"
          if (!(Test-Path $libDir)) {
            # Fallback to debug lib to help diagnose; you likely want release
            $dbgDir = Join-Path $vcpkgRoot "installed\x86-windows-static\debug\lib"
            if (!(Test-Path $dbgDir)) {
              throw "vcpkg lib folder not found. Checked: `n$libDir`n$dbgDir"
            }
            $libDir = $dbgDir
          }
          New-Item -ItemType Directory -Force -Path artifacts\x86-windows-static | Out-Null
          $lib = Get-ChildItem -Filter "vpx*.lib" $libDir | Select-Object -First 1
          if (-not $lib) { throw "vpx*.lib not found in $libDir" }
          Copy-Item $lib.FullName "artifacts\x86-windows-static\vpx.lib"
          Copy-Item $lib.FullName "artifacts\x86-windows-static\vpxmt.lib"

      - name: Verify static CRT (/MT) for release lib if present
        shell: pwsh
        run: |
          if (Test-Path "artifacts\x86-windows-static\vpx.lib") {
            $out = & dumpbin /directives "artifacts\x86-windows-static\vpx.lib"
            if ($out -notmatch "LIBCMT") { Write-Host $out; throw "Library is not linked with static CRT (LIBCMT)." }
            "Verified: static CRT (LIBCMT) detected."
          } else {
            Write-Warning "Release lib not present; likely collected debug lib as fallback."
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libvpx-v142-x86-windows-static
          path: artifacts/x86-windows-static/*
